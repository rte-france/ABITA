<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util" xmlns:batch="http://www.springframework.org/schema/batch" xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context" xmlns:task="http://www.springframework.org/schema/task"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
      					http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
      					http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
      					http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
      					http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

  <!-- RUNNER -->
  <bean id="agentDataRunner" class="com.abita.services.batch.RunScheduledBatch">
    <property name="label" value="${artesis.agentdata.name}" />
    <property name="jobLauncher" ref="jobLauncher" />
    <property name="job" ref="agentDataJob" />
  </bean>

  <batch:job id="agentDataJob">
    <batch:step id="ad_1" next="processMovingAgentData">
      <batch:tasklet>
        <batch:chunk reader="agentDataReader" processor="agentDataProcessor" writer="agentDataWriter" chunk-completion-policy="completionPolicy" skip-limit="5000" retry-limit="1">
          <batch:skippable-exception-classes>
            <batch:include class="java.lang.NullPointerException" />
          </batch:skippable-exception-classes>
          <batch:retryable-exception-classes>
            <batch:include class="java.lang.Exception" />
          </batch:retryable-exception-classes>
        </batch:chunk>
      </batch:tasklet>
      <batch:listeners>
        <batch:listener ref="promotionListener" />
      </batch:listeners>
    </batch:step>
    <batch:step id="processMovingAgentData" next="processUpdateLogRent">
      <batch:tasklet ref="moveArtesisFileFromInboundToArchive" />
    </batch:step>
    <!-- V1.5.0 : mise à jour en suivant du loyer écrété -->
    <batch:step id="processUpdateLogRent">
      <batch:tasklet ref="contractServiceFacade" method="updateLopRent" />
    </batch:step>
  </batch:job>

  <bean class="com.abita.dao.batch.artesis.reader.AgentDataFlatFileReader" id="agentDataReader" scope="step">
    <property name="filenameKey">
      <util:constant static-field="com.abita.dao.batch.constant.BatchConstants.BATCH_ARTESIS_AGENT_DATA_FILE_NAME" />
    </property>
    <property name="parameterService" ref="parameterService" />
    <property name="lineMapper" ref="lineMapper" />
    <property name="lineTokenizer" ref="agentDataFixedLengthLineTokenizer" />
    <property name="encoding" value="${batch.encoding}" />
  </bean>

  <bean class="com.abita.dao.batch.artesis.writer.AgentDataWriter" id="agentDataWriter">
    <property name="sessionFactory" ref="sessionFactory" />
    <property name="mapper" ref="dozerMapper" />
    <property name="fieldOfActivityService" ref="fieldOfActivityService" />
    <property name="agencyService" ref="agencyService" />
  </bean>

  <bean id="agentDataProcessor" class="com.abita.dao.batch.artesis.processor.AgentDataProcessor">
    <property name="tenantServiceFacade" ref="tenantServiceFacade" />
    <property name="contractServiceFacade" ref="contractServiceFacade" />
  </bean>

  <bean id="agentDataFixedLengthLineTokenizer" class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
    <property name="names" value="${artesis.agentdata.names}" />
    <property name="columns" value="${artesis.agentdata.columns}" />
  </bean>

  <bean id="agentDataFieldSetMapper" class="com.abita.dao.batch.artesis.fieldsetmapper.AgentDataFieldSetMapper" />

  <bean id="lineMapper" class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
    <property name="lineTokenizer" ref="agentDataFixedLengthLineTokenizer" />
    <property name="fieldSetMapper" ref="agentDataFieldSetMapper" />
  </bean>

</beans>
