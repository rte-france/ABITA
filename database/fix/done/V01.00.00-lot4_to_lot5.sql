-- ACCOUNTING_CODE (CODES COMPTABLES)							
CREATE TABLE ACCOUNTING_CODE (	acc_id NUMBER(19,0) not null, acc_code VARCHAR2(10 CHAR) not null,
 							acc_label VARCHAR2(250 CHAR) not null, 
 							CONSTRAINT pk_accounting_code PRIMARY KEY (acc_id) USING INDEX TABLESPACE TBS_ABITA_IDX,
 							CONSTRAINT uk_accounting_label UNIQUE (acc_label)DEFERRABLE INITIALLY DEFERRED);

-- SEQUENCE pour ACCOUNTING_CODE
CREATE SEQUENCE SEQ_ACCOUNTING_CODE
START WITH 1 
INCREMENT BY 1 
NOMAXVALUE; 

-- COMMENT pour ACCOUNTING_CODE
COMMENT ON TABLE ACCOUNTING_CODE IS 'Codes comptables';
COMMENT ON COLUMN ACCOUNTING_CODE.acc_id IS 'Identifiant technique du code comptable';
COMMENT ON COLUMN ACCOUNTING_CODE.acc_code IS 'Code comptable';
COMMENT ON COLUMN ACCOUNTING_CODE.acc_label IS 'Libellé du code comptable';

INSERT INTO ACCOUNTING_CODE (acc_id, acc_code, acc_label) VALUES (SEQ_ACCOUNTING_CODE.nextval, '464220','YL : Compte général collectif');
INSERT INTO ACCOUNTING_CODE (acc_id, acc_code, acc_label) VALUES (SEQ_ACCOUNTING_CODE.nextval, '613250','YL : Compte charge loyer');
INSERT INTO ACCOUNTING_CODE (acc_id, acc_code, acc_label) VALUES (SEQ_ACCOUNTING_CODE.nextval, '486230','YL : Compte général : Charges prévisionnelles');
INSERT INTO ACCOUNTING_CODE (acc_id, acc_code, acc_label) VALUES (SEQ_ACCOUNTING_CODE.nextval, '614110','YL : Compte général : Charges prévisionnelles, logement charges locatives');
INSERT INTO ACCOUNTING_CODE (acc_id, acc_code, acc_label) VALUES (SEQ_ACCOUNTING_CODE.nextval, '464210','ZN : Compte tiers non salarié RTE ou retraités de plus de 6 mois');
INSERT INTO ACCOUNTING_CODE (acc_id, acc_code, acc_label) VALUES (SEQ_ACCOUNTING_CODE.nextval, '464210','NC : Compte tiers non salarié RTE ou retraités de plus de 6 mois');
INSERT INTO ACCOUNTING_CODE (acc_id, acc_code, acc_label) VALUES (SEQ_ACCOUNTING_CODE.nextval, '425410','ZN : Compte salarié RTE');
INSERT INTO ACCOUNTING_CODE (acc_id, acc_code, acc_label) VALUES (SEQ_ACCOUNTING_CODE.nextval, '425410','NC : Compte salarié RTE');
INSERT INTO ACCOUNTING_CODE (acc_id, acc_code, acc_label) VALUES (SEQ_ACCOUNTING_CODE.nextval, '708300','ZN : Compte produit LOGEMENT - LOYER');
INSERT INTO ACCOUNTING_CODE (acc_id, acc_code, acc_label) VALUES (SEQ_ACCOUNTING_CODE.nextval, '708308','ZN : Compte produit LOCATIONS IMMOBILIER TERTIAIRE ET AUTRES');
INSERT INTO ACCOUNTING_CODE (acc_id, acc_code, acc_label) VALUES (SEQ_ACCOUNTING_CODE.nextval, '708301','NC : Compte produit LOGEMENT - CHARGES LOCATIVES');




-- TVA_CODE (CODES TVA)
CREATE TABLE TVA_CODE (	tva_id NUMBER(19,0) not null, tva_code VARCHAR2(2 CHAR) not null,
 							tva_label VARCHAR2(250 CHAR) not null, 
 							CONSTRAINT pk_tva_code PRIMARY KEY (tva_id) USING INDEX TABLESPACE TBS_ABITA_IDX,
 							CONSTRAINT uk_tva_code UNIQUE (tva_code) DEFERRABLE INITIALLY DEFERRED);

-- SEQUENCE pour TVA_CODE
CREATE SEQUENCE SEQ_TVA_CODE
START WITH 1 
INCREMENT BY 1 
NOMAXVALUE; 

-- COMMENT pour TVA_CODE
COMMENT ON TABLE TVA_CODE IS 'Codes TVA';
COMMENT ON COLUMN TVA_CODE.tva_id IS 'Identifiant technique du code TVA';
COMMENT ON COLUMN TVA_CODE.tva_code IS 'Code TVA';
COMMENT ON COLUMN TVA_CODE.tva_label IS 'Libellé du code TVA';


-- Mise à jour de ROOM_CATEGORY
ALTER TABLE ROOM_CATEGORY ADD (RCA_FIRST_10_SQR_METER_PRICE NUMBER(10,2) DEFAULT 0 NOT NULL, RCA_NEXT_SQR_METER_PRICE NUMBER(10,2) DEFAULT 0 NOT NULL);
UPDATE ROOM_CATEGORY SET RCA_FIRST_10_SQR_METER_PRICE = 10.40, RCA_NEXT_SQR_METER_PRICE = 6.25 WHERE RCA_LABEL = 'I et Exceptionnel';
UPDATE ROOM_CATEGORY SET RCA_FIRST_10_SQR_METER_PRICE = 9.16, RCA_NEXT_SQR_METER_PRICE = 5.50 WHERE RCA_LABEL = '(I + II A) / 2';
UPDATE ROOM_CATEGORY SET RCA_FIRST_10_SQR_METER_PRICE = 7.89, RCA_NEXT_SQR_METER_PRICE = 4.73 WHERE RCA_LABEL = 'II A';
UPDATE ROOM_CATEGORY SET RCA_FIRST_10_SQR_METER_PRICE = 6.71, RCA_NEXT_SQR_METER_PRICE = 3.86 WHERE RCA_LABEL = '(II A + II B) / 2';
UPDATE ROOM_CATEGORY SET RCA_FIRST_10_SQR_METER_PRICE = 5.49, RCA_NEXT_SQR_METER_PRICE = 2.98 WHERE RCA_LABEL = 'II B';
UPDATE ROOM_CATEGORY SET RCA_FIRST_10_SQR_METER_PRICE = 4.88, RCA_NEXT_SQR_METER_PRICE = 2.64 WHERE RCA_LABEL = '(II B + II C) / 2';
UPDATE ROOM_CATEGORY SET RCA_FIRST_10_SQR_METER_PRICE = 4.27, RCA_NEXT_SQR_METER_PRICE = 2.31 WHERE RCA_LABEL = 'II C';
UPDATE ROOM_CATEGORY SET RCA_FIRST_10_SQR_METER_PRICE = 3.44, RCA_NEXT_SQR_METER_PRICE = 1.86 WHERE RCA_LABEL = '(II C + III A) / 2';
UPDATE ROOM_CATEGORY SET RCA_FIRST_10_SQR_METER_PRICE = 2.63, RCA_NEXT_SQR_METER_PRICE = 1.41 WHERE RCA_LABEL = 'III A';
UPDATE ROOM_CATEGORY SET RCA_FIRST_10_SQR_METER_PRICE = 2.09, RCA_NEXT_SQR_METER_PRICE = 1.12 WHERE RCA_LABEL = '(III A + III B) / 2';
UPDATE ROOM_CATEGORY SET RCA_FIRST_10_SQR_METER_PRICE = 1.59, RCA_NEXT_SQR_METER_PRICE = 0.81 WHERE RCA_LABEL = 'III B';

-- Mise à jour de RENT_TYPOLOGY
ALTER TABLE RENT_TYPOLOGY ADD (RTP_TECHNICAL_CODE VARCHAR(3 CHAR) DEFAULT 'XYZ' NOT NULL);
ALTER TABLE RENT_TYPOLOGY MODIFY (RTP_LABEL VARCHAR(40 CHAR));
INSERT INTO RENT_TYPOLOGY (rtp_id, rtp_label, rtp_technical_code) VALUES (SEQ_RENT_TYPOLOGY.nextval, 'Loyer d''astreinte (Pers 530)','LAS');
INSERT INTO RENT_TYPOLOGY (rtp_id, rtp_label, rtp_technical_code) VALUES (SEQ_RENT_TYPOLOGY.nextval, 'Loyer marché','LMA');
INSERT INTO RENT_TYPOLOGY (rtp_id, rtp_label, rtp_technical_code) VALUES (SEQ_RENT_TYPOLOGY.nextval, 'Loyer banalisé','LBA');
INSERT INTO RENT_TYPOLOGY (rtp_id, rtp_label, rtp_technical_code) VALUES (SEQ_RENT_TYPOLOGY.nextval, 'Loyer plafond','LPL');

-- Mise à jour de PAYMENT_METHOD
INSERT INTO PAYMENT_METHOD (pme_id, pme_label) VALUES (SEQ_PAYMENT_METHOD.nextval, 'Retenue sur salaire');
INSERT INTO PAYMENT_METHOD (pme_id, pme_label) VALUES (SEQ_PAYMENT_METHOD.nextval, 'Prélèvement sur compte bancaire');
INSERT INTO PAYMENT_METHOD (pme_id, pme_label) VALUES (SEQ_PAYMENT_METHOD.nextval, 'Chèque');
INSERT INTO PAYMENT_METHOD (pme_id, pme_label) VALUES (SEQ_PAYMENT_METHOD.nextval, 'Virement');

-- Mise à jour de TERMINATION
INSERT INTO TERMINATION (ter_id, tpt_label) VALUES (SEQ_TERMINATION.nextval, 'Résiliation du propriétaire');
INSERT INTO TERMINATION (ter_id, tpt_label) VALUES (SEQ_TERMINATION.nextval, 'Mutation de l''agent');
INSERT INTO TERMINATION (ter_id, tpt_label) VALUES (SEQ_TERMINATION.nextval, 'Retraite');
INSERT INTO TERMINATION (ter_id, tpt_label) VALUES (SEQ_TERMINATION.nextval, 'Décès');
INSERT INTO TERMINATION (ter_id, tpt_label) VALUES (SEQ_TERMINATION.nextval, 'Changement de logement');



-- Mise à jour de CONTRACT
DROP TABLE CONTRACT CASCADE CONSTRAINTS;
-- CONTRACT (CONTRAT OCCUPANT)
CREATE TABLE CONTRACT (
	 CON_ID NUMBER(19,0) NOT NULL,
	 CON_REFERENCE VARCHAR2(13 CHAR),
	 CON_SIGNATURE VARCHAR2(1 CHAR),
	 CON_START_VALIDITY_DATE DATE NOT NULL,
	 CON_END_VALIDITY_DATE DATE,
	 CON_MARKET_RENT_PRICE NUMBER(10,3),
	 CON_RENT_PRICE_LIMIT NUMBER(10,3),
	 CON_GARAGE_RENT NUMBER(10,3),
	 CON_GARDEN_RENT NUMBER(10,3),
	 CON_EXTRA_RENT NUMBER(10,3),
	 CON_EXPECTED_CHARGE_COST NUMBER(10,3),
	 CON_SPORADICALLY_INVOICING NUMBER(10,3),
	 CON_ADDED_WITHDRAWN_RENT NUMBER(10,3) DEFAULT 0 NOT NULL,
	 CON_LAST_WITHDRAWN_DATE DATE DEFAULT SYSDATE NOT NULL,
	 CON_TERMINATION_SAVINGS VARCHAR2(1 CHAR) NOT NULL,
	 CON_TERMINATION_SAVING_AMOUNT NUMBER(10,3) DEFAULT 0 NOT NULL,
	 CON_LAST_SAVING_DATE DATE DEFAULT SYSDATE NOT NULL,
	 CON_REAL_ESTATE_RENTAL_VALUE NUMBER(10,3),
	 HOU_ID NUMBER(19,0) NOT NULL,
	 TEN_ID NUMBER(19,0) NOT NULL,
	 RTP_ID NUMBER(19,0) NOT NULL,
	 TER_ID NUMBER(19,0),
	 FOA_ID NUMBER(19,0) NOT NULL,
	 CCE_ID NUMBER(19,0) NOT NULL,
	 PME_ID NUMBER(19,0) NOT NULL,
	 CONSTRAINT PK_CONTRACT PRIMARY KEY (CON_ID) USING INDEX TABLESPACE TBS_ABITA_IDX,
	 CONSTRAINT FK_CON_2_DWE FOREIGN KEY (HOU_ID) REFERENCES HOUSING (HOU_ID),
	 CONSTRAINT FK_CON_2_OCC FOREIGN KEY (TEN_ID) REFERENCES TENANT (TEN_ID),
	 CONSTRAINT FK_CON_2_RTP FOREIGN KEY (RTP_ID) REFERENCES RENT_TYPOLOGY (RTP_ID),
	 CONSTRAINT FK_CON_2_TER FOREIGN KEY (TER_ID) REFERENCES TERMINATION (TER_ID),
	 CONSTRAINT FK_CON_2_FOA FOREIGN KEY (FOA_ID) REFERENCES FIELD_OF_ACTIVITY (FOA_ID),
	 CONSTRAINT FK_CON_2_CCE FOREIGN KEY (CCE_ID) REFERENCES COST_CENTER (CCE_ID),
	 CONSTRAINT FK_CON_2_PME FOREIGN KEY (PME_ID) REFERENCES PAYMENT_METHOD (PME_ID), 
	 CONSTRAINT CHK_CON_HOU_ID_NOT_NULL CHECK (HOU_ID IS NOT NULL) DEFERRABLE INITIALLY DEFERRED,
	 CONSTRAINT CHK_CON_TEN_ID_NOT_NULL CHECK (TEN_ID IS NOT NULL) DEFERRABLE INITIALLY DEFERRED,
	 CONSTRAINT CHK_CON_RTP_ID_NOT_NULL CHECK (RTP_ID IS NOT NULL) DEFERRABLE INITIALLY DEFERRED,
	 CONSTRAINT CHK_CON_FOA_ID_NOT_NULL CHECK (FOA_ID IS NOT NULL) DEFERRABLE INITIALLY DEFERRED,
	 CONSTRAINT CHK_CON_CCE_ID_NOT_NULL CHECK (CCE_ID IS NOT NULL) DEFERRABLE INITIALLY DEFERRED,
	 CONSTRAINT CHK_CON_PME_ID_NOT_NULL CHECK (PME_ID IS NOT NULL) DEFERRABLE INITIALLY DEFERRED );
					
-- COMMENT CONTRACT
COMMENT ON TABLE CONTRACT IS 'CONTRAT';
COMMENT ON COLUMN CONTRACT.CON_SIGNATURE IS 'Date de signature du contrat';
COMMENT ON COLUMN CONTRACT.CON_START_VALIDITY_DATE IS 'Date de début de validité du contrat';
COMMENT ON COLUMN CONTRACT.CON_END_VALIDITY_DATE IS 'Date de fin de validité du contrat';
COMMENT ON COLUMN CONTRACT.CON_MARKET_RENT_PRICE IS 'Prix du loyer sur le marché';
COMMENT ON COLUMN CONTRACT.CON_RENT_PRICE_LIMIT IS 'Loyer plafond';
COMMENT ON COLUMN CONTRACT.CON_GARAGE_RENT IS 'Loyer garage';
COMMENT ON COLUMN CONTRACT.CON_GARDEN_RENT IS 'Loyer jardin';
COMMENT ON COLUMN CONTRACT.CON_EXTRA_RENT IS 'Surloyer';
COMMENT ON COLUMN CONTRACT.CON_REAL_ESTATE_RENTAL_VALUE IS 'Montant de la Valeur Locative Foncière';



CREATE OR REPLACE FUNCTION GET_CALCULATED_BENEFIT (salary NUMBER, HOU_ROOM_COUNT NUMBER) RETURN NUMBER AS
  RESULTAT NUMBER;
BEGIN
    
  select HOU_ROOM_COUNT * decode(HOU_ROOM_COUNT, 1, ble_benefits_one_room, ble_benefits_many_rooms) 
  into RESULTAT
  from (
  select TMP.*, rownum RN 
  from (
    SELECT B.*
    FROM benefits_level B
    where salary - B.ble_minimum_threshold >= 0
    ORDER BY salary - B.ble_minimum_threshold
  ) TMP)
  where RN = 1;
  
  RETURN RESULTAT;
END GET_CALCULATED_BENEFIT;
/

CREATE OR REPLACE VIEW VUE_LSC_CALC (CON_ID, LSC) AS
      SELECT C.CON_ID, 
        (LEAST(h.hou_revised_surface_area, 10) * rc.rca_first_10_sqr_meter_price) + (GREATEST(h.hou_revised_surface_area - 10, 0) * rc.rca_next_sqr_meter_price) AS LSC
      FROM CONTRACT C
      JOIN HOUSING H on C.HOU_ID = H.HOU_ID
      JOIN ROOM_CATEGORY RC on H.RCA_ID = RC.RCA_ID;

CREATE OR REPLACE VIEW VUE_NN_COEF_CALC (CON_ID, NNCOEF) AS
      SELECT C.CON_ID, 
        ROUND((t.ten_household_size + decode(T.TEN_MANAGERIAL_EMP, '1', 1, 0)) / nullif(h.hou_room_count + decode(rt.rtp_technical_code, 'LAS', 1, 0),0),3) AS NNCOEF
      FROM CONTRACT C
      JOIN RENT_TYPOLOGY RT on C.RTP_ID = RT.RTP_ID
      JOIN HOUSING H on C.HOU_ID = H.HOU_ID
      JOIN TENANT T on C.TEN_ID = T.TEN_ID;

CREATE OR REPLACE VIEW VUE_SHRTTRM_CNTRCT_DSC_CALC (CON_ID, STCD) AS
      Select LSC_C.CON_ID,
        ROUND(LSC_C.LSC * 0.075,3) as STCD
      FROM VUE_LSC_CALC LSC_C;

CREATE OR REPLACE VIEW VUE_LOP_RENT_CALC (CON_ID, LOP_RENT) AS
      Select C.CON_ID,
        ROUND(T.ten_reference_gross_salary * 0.15,3) as LOP_RENT
      FROM CONTRACT C
      JOIN TENANT T on C.TEN_ID = T.TEN_ID;


CREATE OR REPLACE VIEW VUE_LNA_CALC (CON_ID, LNA) AS
      Select C.CON_ID,
        ROUND(DECODE(RT.rtp_technical_code, 
          'LAS', LEAST(VUE_NN_COEF_CALC.NNCOEF * VUE_LSC_CALC.LSC - VUE_SHRTTRM_CNTRCT_DSC_CALC.STCD, VUE_LOP_RENT_CALC.LOP_RENT), 
          'LMA', C.CON_MARKET_RENT_PRICE, 
          'LBA', LEAST(VUE_LSC_CALC.LSC - NVL(VUE_SHRTTRM_CNTRCT_DSC_CALC.STCD,0), VUE_LOP_RENT_CALC.LOP_RENT), 
          C.CON_RENT_PRICE_LIMIT),3) as LNA
      FROM CONTRACT C
      JOIN RENT_TYPOLOGY RT on C.RTP_ID = RT.RTP_ID
      JOIN VUE_LSC_CALC on C.CON_ID = VUE_LSC_CALC.CON_ID
      JOIN VUE_NN_COEF_CALC on C.CON_ID = VUE_NN_COEF_CALC.CON_ID
      JOIN VUE_SHRTTRM_CNTRCT_DSC_CALC on C.CON_ID = VUE_SHRTTRM_CNTRCT_DSC_CALC.CON_ID
      JOIN VUE_LOP_RENT_CALC on C.CON_ID = VUE_LOP_RENT_CALC.CON_ID;


CREATE OR REPLACE VIEW VUE_WITHDRAWN_RENT_CALC (CON_ID, WITHDRAWN_RENT) AS
      Select C.CON_ID,
        VUE_LNA_CALC.LNA + NVL(C.con_garage_rent,0) + NVL(C.con_garden_rent,0) + NVL(C.con_extra_rent,0) + NVL(C.con_expected_charge_cost,0) + NVL(C.con_sporadically_invoicing,0) AS WITHDRAWN_RENT
      FROM CONTRACT C
      JOIN VUE_LNA_CALC on C.CON_ID = VUE_LNA_CALC.CON_ID;

	  
CREATE OR REPLACE VIEW VUE_TERM_SAVING_MONTH_CALC (CON_ID, TERM_SAVING_MONTH) AS
      Select C.CON_ID,
        ROUND((VUE_LNA_CALC.LNA + NVL(C.con_garden_rent,0)) * 0.075,3)  as TERM_SAVING_MONTH
      FROM CONTRACT C
      JOIN VUE_LNA_CALC on C.CON_ID = VUE_LNA_CALC.CON_ID;


-- Vue CONTRACT_DETAIL
CREATE OR REPLACE VIEW CONTRACT_DETAIL
(CON_ID, CON_REFERENCE, CON_SIGNATURE, CON_START_VALIDITY_DATE, CON_END_VALIDITY_DATE, 
 CON_MARKET_RENT_PRICE, CON_RENT_PRICE_LIMIT, CON_GARAGE_RENT, CON_GARDEN_RENT, CON_EXTRA_RENT, 
 CON_EXPECTED_CHARGE_COST, CON_SPORADICALLY_INVOICING, CON_ADDED_WITHDRAWN_RENT, CON_LAST_WITHDRAWN_DATE, CON_TERMINATION_SAVINGS, 
 CON_TERMINATION_SAVING_AMOUNT, CON_LAST_SAVING_DATE, CON_REAL_ESTATE_RENTAL_VALUE, HOU_ID, TEN_ID, 
 RTP_ID, TER_ID, FIE_ID, CCE_ID, PME_ID, 
 COD_REVISED_SURFACE_AREA, COD_REVISED_SURFACE_AREA_RENT, COD_N_N_COEF, COD_NET_AGENT_RENT, COD_SHORTTERM_CONTRACT_DISCO, 
 COD_LOP_RENT, COD_WITHDRAWN_RENT, COD_ADDED_WITHDRAWN_RENT, COD_TERMINATION_SAVING_MONTH, COD_TERMINATION_SAVING_AMOUNT,
 COD_CALCULATED_BENEFITS )
  AS    
  SELECT 
    C.CON_ID, C.CON_REFERENCE, C.CON_SIGNATURE, C.CON_START_VALIDITY_DATE, C.CON_END_VALIDITY_DATE, 
    C.CON_MARKET_RENT_PRICE, C.CON_RENT_PRICE_LIMIT, C.CON_GARAGE_RENT, C.CON_GARDEN_RENT, C.CON_EXTRA_RENT, 
    C.CON_EXPECTED_CHARGE_COST, C.CON_SPORADICALLY_INVOICING, C.CON_ADDED_WITHDRAWN_RENT, C.CON_LAST_WITHDRAWN_DATE, C.CON_TERMINATION_SAVINGS, 
    C.CON_TERMINATION_SAVING_AMOUNT, C.CON_LAST_SAVING_DATE, C.CON_REAL_ESTATE_RENTAL_VALUE, C.HOU_ID, C.TEN_ID, 
    C.RTP_ID, C.TER_ID, C.FOA_ID, C.CCE_ID, C.PME_ID ,    
    H.HOU_REVISED_SURFACE_AREA AS COD_REVISED_SURFACE_AREA,
    VUE_LSC_CALC.LSC AS COD_REVISED_SURFACE_AREA_RENT,
    VUE_NN_COEF_CALC.NNCOEF AS COD_N_N_COEF,
    VUE_LNA_CALC.LNA AS COD_NET_AGENT_RENT,
    VUE_SHRTTRM_CNTRCT_DSC_CALC.STCD AS COD_SHORTTERM_CONTRACT_DISCO,
    VUE_LOP_RENT_CALC.LOP_RENT AS COD_LOP_RENT,
    VUE_WITHDRAWN_RENT_CALC.WITHDRAWN_RENT AS COD_WITHDRAWN_RENT,
    c.con_added_withdrawn_rent + VUE_WITHDRAWN_RENT_CALC.WITHDRAWN_RENT AS COD_ADDED_WITHDRAWN_RENT,
    VUE_TERM_SAVING_MONTH_CALC.TERM_SAVING_MONTH AS COD_TERMINATION_SAVING_MONTH,
    c.con_termination_saving_amount + VUE_TERM_SAVING_MONTH_CALC.TERM_SAVING_MONTH AS COD_TERMINATION_SAVING_AMOUNT,
    GET_CALCULATED_BENEFIT(t.ten_actual_salary, h.hou_room_count) AS COD_CALCULATED_BENEFITS
  FROM CONTRACT C
  JOIN HOUSING H on C.HOU_ID = H.HOU_ID
  JOIN TENANT T on C.TEN_ID = T.TEN_ID
  JOIN VUE_LSC_CALC on C.CON_ID = VUE_LSC_CALC.CON_ID
  JOIN VUE_NN_COEF_CALC on C.CON_ID = VUE_NN_COEF_CALC.CON_ID
  JOIN VUE_SHRTTRM_CNTRCT_DSC_CALC on C.CON_ID = VUE_SHRTTRM_CNTRCT_DSC_CALC.CON_ID
  JOIN VUE_LOP_RENT_CALC on C.CON_ID = VUE_LOP_RENT_CALC.CON_ID
  JOIN VUE_LNA_CALC on C.CON_ID = VUE_LNA_CALC.CON_ID
  JOIN VUE_WITHDRAWN_RENT_CALC on C.CON_ID = VUE_WITHDRAWN_RENT_CALC.CON_ID
  JOIN VUE_TERM_SAVING_MONTH_CALC on C.CON_ID = VUE_TERM_SAVING_MONTH_CALC.CON_ID;