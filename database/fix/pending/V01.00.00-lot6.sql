CREATE TABLE DETAIL_CRON (	DET_ID NUMBER(9), 
						DET_YL VARCHAR2(8), 
						DET_ZN VARCHAR2(8), 
						DET_NC VARCHAR2(8), 
						DET_NT VARCHAR2(8), 
						DET_NNI VARCHAR2(8), 
						DET_USER_DATA VARCHAR2(8), 
						DET_SALARY_RETAINED VARCHAR2(8), 
						DET_FRINGE_BENEFITS VARCHAR2(8), 
						CONSTRAINT PK_DETAIL_CRON PRIMARY KEY (DET_ID) USING INDEX TABLESPACE TBS_ABITA_IDX);

INSERT INTO DETAIL_CRON
VALUES(1, '15 06:00', '15 06:30', '25 06:00', '10 06:00', '10 06:30', '22 06:00', '27 06:00', '27 06:30');

ALTER TABLE RENT_TYPOLOGY ADD RTP_HOUSING_INDEX  varchar2(2);
UPDATE RENT_TYPOLOGY SET RTP_HOUSING_INDEX='04' where RTP_TECHNICAL_CODE='LAS';
UPDATE RENT_TYPOLOGY SET RTP_HOUSING_INDEX='06' where RTP_TECHNICAL_CODE='LBA';
UPDATE RENT_TYPOLOGY SET RTP_HOUSING_INDEX='06' where RTP_TECHNICAL_CODE='LPL';
UPDATE RENT_TYPOLOGY SET RTP_HOUSING_INDEX='06' where RTP_TECHNICAL_CODE='LMA';
ALTER TABLE RENT_TYPOLOGY MODIFY RTP_HOUSING_INDEX NOT NULL;

ALTER TABLE HOUSING_NATURE ADD HNA_NATURE_OF_LOCAL  varchar2(3);
UPDATE HOUSING_NATURE SET HNA_NATURE_OF_LOCAL='MAI' where HNA_LABEL='Maison';
UPDATE HOUSING_NATURE SET HNA_NATURE_OF_LOCAL='MAI' where HNA_LABEL='Bâtiment';
UPDATE HOUSING_NATURE SET HNA_NATURE_OF_LOCAL='APP' where HNA_LABEL='Appartement';
UPDATE HOUSING_NATURE SET HNA_NATURE_OF_LOCAL='CHP' where HNA_LABEL='Célibatorium';
UPDATE HOUSING_NATURE SET HNA_NATURE_OF_LOCAL='GAR' where HNA_LABEL='Garage';
UPDATE HOUSING_NATURE SET HNA_NATURE_OF_LOCAL='PCP' where HNA_LABEL='Autre';
ALTER TABLE HOUSING_NATURE MODIFY HNA_NATURE_OF_LOCAL NOT NULL;

ALTER TABLE TYPE_TENANT ADD TTE_NT_HEADER_LABEL  varchar2(50);
UPDATE TYPE_TENANT SET TTE_NT_HEADER_LABEL='Quittance' where TTE_LABEL='Salarié';
UPDATE TYPE_TENANT SET TTE_NT_HEADER_LABEL='TIERS-RTE' where TTE_LABEL='Non salarié';
UPDATE TYPE_TENANT SET TTE_NT_HEADER_LABEL='AGENT_RETRAITE' where TTE_LABEL='Retraité';
ALTER TABLE TYPE_TENANT MODIFY TTE_NT_HEADER_LABEL NOT NULL;

ALTER TABLE THIRD_PARTY
MODIFY thp_gcp_ref VARCHAR2(50 CHAR) null;

ALTER TABLE TENANT
ADD (ten_address VARCHAR2(250 CHAR), 
	 ten_postal_code VARCHAR2(10 CHAR), 
	 ten_city VARCHAR2(50 CHAR));

ALTER TABLE TENANT
MODIFY ten_firstname VARCHAR2(50 CHAR) null;

ALTER TABLE HOUSING
ADD HOU_REFERENCE VARCHAR2(4 CHAR) NOT NULL;

ALTER TABLE THIRD_PARTY_CONTRACT
ADD TPC_REFERENCE VARCHAR2(4 CHAR) NOT NULL;

ALTER TABLE THIRD_PARTY_CONTRACT
ADD TPC_EXPIRY_DATE VARCHAR2(1 CHAR) NULL;

INSERT INTO COST_CENTER
VALUES (SEQ_COST_CENTER.nextval, 'MECALRTE');

INSERT INTO COST_CENTER
VALUES (SEQ_COST_CENTER.nextval, 'MECALTIR');

INSERT INTO FWK_DOMAIN
VALUES (1004, 1, 'batch', 'Batch', 'Batch Parameters', 3);



INSERT INTO FWK_PARAMETER VALUES (4018,0,'artesisNniTempFileName','Nom du fichier de batch Artesis NNI temporaire','Temporary file''s name of Artesis NNI',null,'/applis/abita/temp/Artesis/{0}_{1}',1004,13,1,1,'STRING');
INSERT INTO FWK_PARAMETER VALUES (4011,0,'gcpTempPath','Chemin d’accès aux fichiers GCP temporaires','Path to the temporary GCP''s folder',null,'/applis/abita/temp/GCP/',1004,13,1,1,'STRING');
INSERT INTO FWK_PARAMETER VALUES (4012,0,'artesisInboundPath','Chemin du dossier Inbound pour les fichiers Artesis','Path to the Artesis Inbound''s folder',null,'/applis/abita/Artesis/reception_FTM430/inbound/in/',1004,14,1,1,'STRING');
INSERT INTO FWK_PARAMETER VALUES (4009,0,'gcpTempFileName','Nom des fichiers GCP temporaires','Temporary file''s name of GCP',null,'/applis/abita/temp/GCP/{0}_{1}.txt',1004,12,1,1,'STRING');
INSERT INTO FWK_PARAMETER VALUES (4010,0,'artesisTempFileName','Nom des fichiers Artesis temporaires','Temporary file''s name of Artesis',null,'/applis/abita/temp/Artesis/{0}_{1}.txt',1004,13,1,1,'STRING');
INSERT INTO FWK_PARAMETER VALUES (4017,0,'artesisTempPath','Chemin d’accès aux fichiers Artesis temporaires','Path to the temporary Artesis''s folder',null,'/applis/abita/temp/Artesis/',1004,13,1,1,'STRING');
INSERT INTO FWK_PARAMETER VALUES (4013,0,'artesisOutboundPath','Chemin du dossier Outbound pour les fichiers Artesis','Path to the Artesis Outbound''s folder',null,'/applis/abita/Artesis/envoi_FTM429/outbound/out/',1004,14,1,1,'STRING');
INSERT INTO FWK_PARAMETER VALUES (4015,0,'gcpArchivePath','Chemin du dossier d''archive des fichiers GCP','Path to the GCP archive''s folder',null,'/applis/abita/archives/GCP/',1004,13,1,1,'STRING');
INSERT INTO FWK_PARAMETER VALUES (4016,0,'artesisArchivePath','Chemin du dossier d''archive des fichiers Artesis','Path to the Artesis archive''s folder',null,'/applis/abita/archives/Artesis/',1004,13,1,1,'STRING');
INSERT INTO FWK_PARAMETER VALUES (4014,0,'gcpOutboundPath','Chemin du dossier Outbound pour les fichiers GCP','Path to the GCP Outbound''s folder',null,'/applis/abita/GCP/envoi_FTM433/outbound/out/',1004,14,1,1,'STRING');
INSERT INTO FWK_PARAMETER VALUES (4003,0,'agentDataFileName','Nom du fichier de batch Artesis des données agents','File''s name of Artesis Agent Data',null,'/applis/abita/Artesis/reception_FTM430/inbound/in/GA-LOG-NSIL-DAGLOG.txt',1004,8,1,1,'STRING');
INSERT INTO FWK_PARAMETER VALUES (4007,0,'ylAndZnFragmentFileName','Nom du fichier de batch GCP pour fragment de fichier YL et ZN','File''s name of fragment GCP ZN and YL',null,'/applis/abita/temp/GCP/{2}/{3}_{4}_{5}_{6}.txt',1004,10,1,1,'STRING');
INSERT INTO FWK_PARAMETER VALUES (4008,0,'ncFileName','Nom du fichier de batch GCP pour fichier NC','File''s name of GCP NC',null,'/applis/abita/temp/GCP/{0}_{1}.txt',1004,11,1,1,'STRING');

ALTER TABLE TENANT
MODIFY ten_managerial_emp VARCHAR2(1 CHAR) null;

ALTER TABLE TENANT
MODIFY TEN_MANAGERIAL_EMP_LAST_YEAR VARCHAR2(1 CHAR) null;

CREATE TABLE YL_ZN_ACC_DOC_NBR ( 	
	yl_zn_adn_id NUMBER(19,0) not null, 
	yl_zn_adn_piece_number NUMBER(10,0) DEFAULT 9100000,
	yl_zn_adn_piece_type VARCHAR2(2) not null,
	yl_zn_adn_piece_date DATE not null, 	
	TPC_ID NUMBER(19,0) not null,
 	CONSTRAINT fk_yl_zn_adn PRIMARY KEY (yl_zn_adn_id) USING INDEX TABLESPACE TBS_ABITA_IDX,
	CONSTRAINT FK_YL_ZN_ACC_DOC_NBR_2_TPC FOREIGN KEY (TPC_ID) REFERENCES THIRD_PARTY_CONTRACT (TPC_ID));
	
-- SEQUENCE pour YL_ZN_ACCOUNTING_DOC_NUMBER
CREATE SEQUENCE SEQ_YL_ZN_ACC_DOC_NBR
START WITH 1 
INCREMENT BY 1 
NOMAXVALUE; 
	
CREATE TABLE NC_NT_ACC_DOC_NBR ( 	
	nc_nt_adn_id NUMBER(19,0) not null, 
	nc_nt_adn_piece_number NUMBER(10,0) not null, 
	nc_nt_adn_piece_type VARCHAR2(2) not null,
	nc_nt_adn_piece_date DATE not null, 	
	CON_ID NUMBER(19,0) not null,
 	CONSTRAINT fk_nc_nt_adn PRIMARY KEY (nc_nt_adn_id) USING INDEX TABLESPACE TBS_ABITA_IDX,
	CONSTRAINT FK_NC_NT_ACC_DOC_NBR_2_CON FOREIGN KEY (CON_ID) REFERENCES CONTRACT (CON_ID));
	
-- SEQUENCE pour NC_NT_ACCOUNTING_DOC_NUMBER
CREATE SEQUENCE SEQ_NC_NT_ACC_DOC_NBR
START WITH 1 
INCREMENT BY 1 
NOMAXVALUE;


CREATE OR REPLACE VIEW VUE_NN_COEF_CALC (CON_ID, NNCOEF) AS
      SELECT C.CON_ID, 
        ROUND((t.TEN_HOUSEHOLD_SIZE_LAST_YEAR + decode(T.TEN_MANAGERIAL_EMP_LAST_YEAR, '1', 1, 0)) / nullif(h.hou_room_count + decode(rt.rtp_technical_code, 'LAS', 1, 0),0),3) AS NNCOEF
      FROM CONTRACT C
      JOIN RENT_TYPOLOGY RT on C.RTP_ID = RT.RTP_ID
      JOIN HOUSING H on C.HOU_ID = H.HOU_ID
      JOIN TENANT T on C.TEN_ID = T.TEN_ID;
      
CREATE OR REPLACE VIEW VUE_LNA_CALC (CON_ID, LNA) AS
      SELECT C.CON_ID,
        ROUND(DECODE(RT.rtp_technical_code, 
          'LAS', LEAST(VUE_NN_COEF_CALC.NNCOEF * (VUE_LSC_CALC.LSC - VUE_SHRTTRM_CNTRCT_DSC_CALC.STCD), VUE_LOP_RENT_CALC.LOP_RENT), 
          'LMA', C.CON_MARKET_RENT_PRICE, 
          'LBA', LEAST(VUE_LSC_CALC.LSC - NVL(VUE_SHRTTRM_CNTRCT_DSC_CALC.STCD,0), VUE_LOP_RENT_CALC.LOP_RENT), 
          C.CON_RENT_PRICE_LIMIT),3) as LNA
      FROM CONTRACT C
      JOIN RENT_TYPOLOGY RT on C.RTP_ID = RT.RTP_ID
      JOIN VUE_LSC_CALC on C.CON_ID = VUE_LSC_CALC.CON_ID
      JOIN VUE_NN_COEF_CALC on C.CON_ID = VUE_NN_COEF_CALC.CON_ID
      JOIN VUE_SHRTTRM_CNTRCT_DSC_CALC on C.CON_ID = VUE_SHRTTRM_CNTRCT_DSC_CALC.CON_ID
      JOIN VUE_LOP_RENT_CALC on C.CON_ID = VUE_LOP_RENT_CALC.CON_ID;


CREATE OR REPLACE VIEW VUE_WITHDRAWN_RENT_CALC (CON_ID, WITHDRAWN_RENT) AS
      Select C.CON_ID,
        VUE_LNA_CALC.LNA + NVL(C.con_garage_rent,0) + (NVL(C.con_garden_rent,0) - 0.075 * NVL(C.con_garden_rent,0)) + NVL(C.con_extra_rent,0) + NVL(C.con_expected_charge_cost,0) + NVL(C.con_sporadically_invoicing,0) AS WITHDRAWN_RENT
      FROM CONTRACT C
      JOIN VUE_LNA_CALC on C.CON_ID = VUE_LNA_CALC.CON_ID;
      

-- Vue CONTRACT_DETAIL
CREATE OR REPLACE VIEW CONTRACT_DETAIL
	(CON_ID, CON_REFERENCE, CON_SIGNATURE, CON_START_VALIDITY_DATE, CON_END_VALIDITY_DATE, 
	 CON_MARKET_RENT_PRICE, CON_RENT_PRICE_LIMIT, CON_GARAGE_RENT, CON_GARDEN_RENT, CON_EXTRA_RENT, 
	 CON_EXPECTED_CHARGE_COST, CON_SPORADICALLY_INVOICING, CON_ADDED_WITHDRAWN_RENT, CON_LAST_WITHDRAWN_DATE, CON_TERMINATION_SAVINGS, 
	 CON_TERMINATION_SAVING_AMOUNT, CON_LAST_SAVING_DATE, CON_REAL_ESTATE_RENTAL_VALUE, HOU_ID, TEN_ID, 
	 RTP_ID, TER_ID, FIE_ID, CCE_ID, PME_ID, 
	 COD_REVISED_SURFACE_AREA, COD_REVISED_SURFACE_AREA_RENT, COD_N_N_COEF, COD_NET_AGENT_RENT, COD_SHORTTERM_CONTRACT_DISCO, 
	 COD_LOP_RENT, COD_WITHDRAWN_RENT, COD_ADDED_WITHDRAWN_RENT, COD_TERMINATION_SAVING_MONTH, COD_TERMINATION_SAVING_AMOUNT,
	 COD_CALCULATED_BENEFITS )
	AS    
  SELECT 
    C.CON_ID, C.CON_REFERENCE, C.CON_SIGNATURE, C.CON_START_VALIDITY_DATE, C.CON_END_VALIDITY_DATE, 
    C.CON_MARKET_RENT_PRICE, C.CON_RENT_PRICE_LIMIT, C.CON_GARAGE_RENT, C.CON_GARDEN_RENT, C.CON_EXTRA_RENT, 
    C.CON_EXPECTED_CHARGE_COST, C.CON_SPORADICALLY_INVOICING, C.CON_ADDED_WITHDRAWN_RENT, C.CON_LAST_WITHDRAWN_DATE, C.CON_TERMINATION_SAVINGS, 
    C.CON_TERMINATION_SAVING_AMOUNT, C.CON_LAST_SAVING_DATE, C.CON_REAL_ESTATE_RENTAL_VALUE, C.HOU_ID, C.TEN_ID, 
    C.RTP_ID, C.TER_ID, C.FOA_ID, C.CCE_ID, C.PME_ID ,    
    H.HOU_REVISED_SURFACE_AREA AS COD_REVISED_SURFACE_AREA,
    VUE_LSC_CALC.LSC AS COD_REVISED_SURFACE_AREA_RENT,
    VUE_NN_COEF_CALC.NNCOEF AS COD_N_N_COEF,
    VUE_LNA_CALC.LNA AS COD_NET_AGENT_RENT,
    VUE_SHRTTRM_CNTRCT_DSC_CALC.STCD AS COD_SHORTTERM_CONTRACT_DISCO,
    VUE_LOP_RENT_CALC.LOP_RENT AS COD_LOP_RENT,
    VUE_WITHDRAWN_RENT_CALC.WITHDRAWN_RENT AS COD_WITHDRAWN_RENT,
    c.con_added_withdrawn_rent + VUE_WITHDRAWN_RENT_CALC.WITHDRAWN_RENT AS COD_ADDED_WITHDRAWN_RENT,
    VUE_TERM_SAVING_MONTH_CALC.TERM_SAVING_MONTH AS COD_TERMINATION_SAVING_MONTH,
    c.con_termination_saving_amount + VUE_TERM_SAVING_MONTH_CALC.TERM_SAVING_MONTH AS COD_TERMINATION_SAVING_AMOUNT,
    GET_CALCULATED_BENEFIT(t.ten_actual_salary, h.hou_room_count) AS COD_CALCULATED_BENEFITS
  FROM CONTRACT C
  JOIN HOUSING H on C.HOU_ID = H.HOU_ID
  JOIN TENANT T on C.TEN_ID = T.TEN_ID
  JOIN VUE_LSC_CALC on C.CON_ID = VUE_LSC_CALC.CON_ID
  JOIN VUE_NN_COEF_CALC on C.CON_ID = VUE_NN_COEF_CALC.CON_ID
  JOIN VUE_SHRTTRM_CNTRCT_DSC_CALC on C.CON_ID = VUE_SHRTTRM_CNTRCT_DSC_CALC.CON_ID
  JOIN VUE_LOP_RENT_CALC on C.CON_ID = VUE_LOP_RENT_CALC.CON_ID
  JOIN VUE_LNA_CALC on C.CON_ID = VUE_LNA_CALC.CON_ID
  JOIN VUE_WITHDRAWN_RENT_CALC on C.CON_ID = VUE_WITHDRAWN_RENT_CALC.CON_ID
  JOIN VUE_TERM_SAVING_MONTH_CALC on C.CON_ID = VUE_TERM_SAVING_MONTH_CALC.CON_ID;
  

INSERT INTO ROOM_CATEGORY
VALUES (SEQ_ROOM_CATEGORY.nextval, 'Autre', 0, 0);

INSERT INTO PAYMENT_METHOD
VALUES (SEQ_PAYMENT_METHOD.nextval, 'Compensation interne');

TRUNCATE TABLE ACCOUNTING_CODE;
ALTER TABLE ACCOUNTING_CODE ADD ACC_TECHNICAL_CODE VARCHAR2(10 CHAR);
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '464220', 'YL : Loyer - Poste de compte fournisseur', 'YLLOYPCFOU');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '613250', 'YL : Loyer - Poste de compte de charge loyer', 'YLLOYPCCLO');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '464220', 'YL : Charges prévisionnelles - Poste de compte fournisseur', 'YLCHPPCFOU');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '614110', 'YL : Charges prévisionnelles - Poste de compte de charges prévisionnelles', 'YLCHPPCCHP');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '464220', 'YL : Charges prévisionnelles (Facturation ponctuelle) - Poste de compte fournisseur', 'YLCFPPCFOU');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '614110', 'YL : Charges prévisionnelles (Facturation ponctuelle) - Poste de compte de charges prévisionnelles', 'YLCFPPCCHP');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '486230', 'ZN : Loyer - Poste de compte général', 'ZNLOYPCGEN');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '613250', 'ZN : Loyer - Poste de compte de charge', 'ZNLOYPCCHP');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '486230', 'ZN : Charges prévisionnelles - Poste de compte général', 'ZNCHPPCGEN');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '614110', 'ZN : Charges prévisionnelles - Poste de compte de charge locatives', 'ZNCHPPCCLO');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '464210', 'NC : Loyer - Poste de compte fournisseur', 'NCLOYPCFOU');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '708300', 'NC : Loyer - Poste de compte de produit', 'NCLOYPCPRO');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '464210', 'NC : Charges locatives - Poste de compte fournisseur', 'NCCLOPCFOU');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '708301', 'NC : Charges locatives - Poste de compte de produit', 'NCCLOPCPRO');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '464210', 'NC : Loyer garage - Poste de compte fournisseur', 'NCLGAPCFOU');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '708308', 'NC : Loyer garage - Poste de compte de produit', 'NCLGAPCPRO');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '464210', 'NT : Loyer - Poste de compte fournisseur', 'NTLOYPCFOU');
INSERT INTO ACCOUNTING_CODE (ACC_ID, ACC_CODE, ACC_LABEL, ACC_TECHNICAL_CODE) VALUES (SEQ_ACCOUNTING_CODE.nextval, '708301', 'NT : Loyer - Poste de compte de produit', 'NTLOYPCPRO');
